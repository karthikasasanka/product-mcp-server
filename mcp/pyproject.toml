[build-system]
requires = ["hatchling>=1.25.0"]
build-backend = "hatchling.build"

[project]
name = "product-mcp-server"
version = "0.1.0"
description = "MCP server powering AI tools and integrations"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.116.1",
    "mcp>=1.12.4",
    "pydantic>=2.11.7",
    "sqlalchemy>=2.0.30",
    "asyncpg>=0.29.0",
    "fastapi-mcp @ git+https://github.com/tadata-org/fastapi_mcp",
    "aiosqlite>=0.19.0",
    "numpy>=1.26.0",
    "langchain-community>=0.3.27",
    "faiss-cpu>=1.12.0",
    "sentence-transformers>=5.1.0",
    "requests>=2.32.4",
    "uvicorn>=0.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "httpx>=0.28.0",
    "ruff>=0.6.9",
    "mypy>=1.11.2",
]

[project.urls]
Homepage = "https://example.com/product-mcp-server"
Repository = "https://example.com/product-mcp-server/repo"
Issues = "https://example.com/product-mcp-server/issues"

[tool.ruff]
extend-select = ["E", "F", "I"]
target-version = "py313"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[tool.pytest.ini_options]
testpaths = ["ai/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--asyncio-mode=auto",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["ai/mcp_api"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["mcp_api"]
